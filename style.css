:root{
    --clr-font-dark: #352f36;
    --clr-font-darker: #070607;
    --clr-font-light: #FFFFF0;
    --clr-rose-gold: #bd8c7d;
    --clr-soft-gold: #d1bfa7;
    --clr-silver: #8e8e90;
    --clr-onyx: #49494b;
}

*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    padding: 0;
}

body {
    line-height: calc(1ex / 0.32);
    -webkit-font-smoothing: antialiased;
}

input, button, textarea, select {
    font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

p {
    text-wrap: pretty;
    max-inline-size: 50ch;
}

h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
}

body {
    font-family: Optima, Candara, 'Noto Sans', source-sans-pro, sans-serif;
    font-size: 1rem;
    min-height: 100vh;
    background-color: var(--clr-font-light);
    color: var(--clr-font-dark);
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 2.5rem 1fr 2.5rem;
    grid-template-areas: 
            "header main"
            "hero main"
            "footer footer";
}

.app-header {
    grid-area: header;
    padding: 0.5em 1em;
    border-bottom: 1px solid currentColor;
}

.app-title {
    /* override font-size */
    font-size: 0.75em;
    font-style: italic;
    font-weight: normal;
}

.app-hero {
    grid-area: hero;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.app-hero__title {
    /* override font-size and family */
    font-family: Didot, 'Bodoni MT', 'Noto Serif Display', 'URW Palladio L', P052, Sylfaen, serif;
    font-size: 6em;
}

.library {
    grid-area: main;
    display: grid;
    grid-template-rows: 2.5rem 1fr;
    grid-template-areas: 
            "controls"
            "content";
    border-left: 2px solid var(--clr-silver);
}

.library__controls {
    grid-area: controls;
    border-bottom: 1px solid currentColor;
    display: flex;
    align-items: center;
    gap: 1em;
    padding: 0.5em 1em;
    /* buttons should stay in one line in order to avoid breaking layout */
    white-space: nowrap;
}

.library__search-container {
    display: flex;
    align-items: center;
    gap: 0.25em;
}

.library__add-button {
    padding: 0.25em 0.5em;
    transition: padding ease 0.5s,
                border-radius ease 0.5s,
                background-color ease 0.5s;
}

.library__add-button:hover {
    border-radius: 1em;
    padding: 0.25em 1.5em;
}

.library__search-button {
    padding: unset;
    border: unset;
}

.library__search-button:hover {
    /* override input, button selectors behavior */
    all: unset;
}

.library__search-input {
    min-width: 25ch;
    transition: padding ease 1s,
                border-radius ease 1s,
                min-width ease 1s,
                background-color ease 0.5s;
}

.library__search-input:hover {
    padding: 0.25em 1em;
    border-radius: 1em;
    min-width: 45ch;
}

/* book list belongs to here */
.library__content {
    grid-area: content;
    max-height: calc(100vh - 5rem);
    overflow: scroll;
}

.book-list__item {
    list-style-type: none;
    padding: 1em 2em;
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: 
            "counter info"
            "actions info";
    column-gap: 3em;
    transition: color ease 0.5s,
                background-color ease 0.5s;
}

/* book-list items are seperated by thin lines */
.book-list__item:not(:last-child) {
    border-bottom: 1px solid currentColor;
}

.book-list__item:hover {
    background: var(--clr-font-dark);
    color: var(--clr-font-light);
}

.book-list__info {
    grid-area: info;
}

.book-list__title {
    font-size: 1.5em;
}


.book-list__actions {
    grid-area: actions;
    display: inline;
}

.book-list__top-row {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1em;
}

.book-list__bottom-row {
    font-style: italic;
    display: grid;
    grid-template-columns: 1fr 1fr;
}

.book-list__status {
    justify-self: end;
}

input,
button {
    background-color: transparent;
    border: unset;
    border-bottom: 1px solid currentColor;
    border-radius: 0.75em;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    gap: 0.1em;
    padding: 0.25em;
}

/* action buttons match color of the nearest container: book list item */
/* this helps to comply when user hover over the list item and switches it's 'background-color' and 'color' */
.library__content button {
    color: inherit;
}

input:hover,
button:hover {
    color: var(--clr-font-light);
    background: var(--clr-font-dark);
    border-color: var(--clr-soft-gold);
}

.visually-hidden {
    display: none;
}


svg {
    fill: currentColor;
}

.app-footer{
    border-top: 1px solid currentColor;
    grid-area: footer;
    display: grid;
    justify-items: center;
    align-items: center;
}

a {
    text-decoration: none;
    color: inherit;
}




